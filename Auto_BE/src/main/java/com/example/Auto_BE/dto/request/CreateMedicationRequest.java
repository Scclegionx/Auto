package com.example.Auto_BE.dto.request;

import com.example.Auto_BE.entity.enums.ETypeMedication;
import jakarta.validation.constraints.*;
import lombok.*;

import java.util.List;

/**
 * üíä UNIFIED Request cho Individual Medication CRUD
 * 
 * ‚úÖ ƒê·ªìng b·ªô v·ªõi MedicationReminderCreateRequest (d√πng trong Prescription)
 * ‚úÖ C√πng l∆∞u v√†o b·∫£ng MedicationReminder
 * ‚úÖ H·ªó tr·ª£ TIME-BASED scheduling
 */
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class CreateMedicationRequest {

    @NotBlank(message = "Medication name is required")
    private String name; // T√™n thu·ªëc

    @Size(max = 1000, message = "Description too long")
    private String description; // M√¥ t·∫£, h∆∞·ªõng d·∫´n s·ª≠ d·ª•ng

    @NotNull(message = "Medication type is required")
    private ETypeMedication type; // Lo·∫°i thu·ªëc: PILL, LIQUID, INJECTION, etc.

    @NotEmpty(message = "At least one reminder time is required")
    private List<
            @Pattern(regexp = "^([01]\\d|2[0-3]):[0-5]\\d$", message = "Invalid time format. Use HH:mm")
            String
    > reminderTimes; // Danh s√°ch gi·ªù nh·∫Øc: ["08:00", "14:00", "20:00"]

    // Ng√†y trong tu·∫ßn: '1111111' = h√†ng ng√†y, '1111100' = T2-T6, '1000001' = T2&CN
    @NotBlank(message = "Days of week is required")
    @Pattern(regexp = "^[01]{7}$", message = "Invalid days format. Use 7 digits (0 or 1)")
    private String daysOfWeek; // "1111111" cho h√†ng ng√†y

    // Optional fields (kh√¥ng b·∫Øt bu·ªôc)
    private Long prescriptionId; // NULL n·∫øu l√† thu·ªëc ri√™ng l·∫ª, c√≥ gi√° tr·ªã n·∫øu thu·ªôc ƒë∆°n

    @Builder.Default
    private Boolean isActive = true; // M·∫∑c ƒë·ªãnh active
}